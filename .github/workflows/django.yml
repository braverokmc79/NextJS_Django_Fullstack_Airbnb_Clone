name: Django CI/CD

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    name: Run Django Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12.3]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgresuser
          POSTGRES_PASSWORD: postgrespassword
          POSTGRES_DB: djangobnb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5        

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set environment for CI
        run: echo "GITHUB_ACTIONS=true" >> $GITHUB_ENV && echo "ENV=test" >> $GITHUB_ENV

      - name: Load .env.test for CI
        run: cp .env.test .env
        working-directory: backend

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: backend

      - name: Run Migrations
        run: |
          python manage.py makemigrations --noinput
          python manage.py migrate --noinput
        working-directory: backend

      - name: Run Tests
        run: |
          python manage.py test
        working-directory: backend

  deploy:
    name: âœ… Deploy to Production Server
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: SSH & Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.DIR }}
            git pull origin main
            cd backend/
            docker compose down
            docker compose -f docker-compose.real.yml down
            docker compose -f docker-compose.real.yml up -d --build
            docker compose -f docker-compose.real.yml exec web python manage.py migrate --noinput
            docker compose -f docker-compose.real.yml exec web python manage.py collectstatic --noinput
